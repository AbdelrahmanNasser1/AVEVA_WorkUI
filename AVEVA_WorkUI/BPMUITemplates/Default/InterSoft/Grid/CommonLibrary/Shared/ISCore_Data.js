var DataSourceOperation={Default:0,Delete:1,Insert:2,Select:3,SelectCount:4,Update:5,BatchUpdate:6};var SelectOperation={SelectData:0,SelectValueList:1,SelectCount:2,SelectChildData:3,SelectGroup:4};function IClientBinding(){this.BindingOperationMode="ServerBinding";this.ClientBindingSettings=new ClientBindingSettings();this.ClientProvider=new IClientDataSourceProvider();this.ClientProvider.Owner=this;this.LastClientAction="";this.IsClientOperation=function(){return(this.ClientBindingSettings.DataLoadMode=="AllData")}}function IClientDataSourceProvider(a){this._Type="IClientDataSourceProvider";ISObject.call(this);this.Owner=null;this.LastCommand=null;if(a){this.Owner=a}this.ExecuteSelect=function(b){};this.ExecuteInsert=function(b,c){};this.ExecuteUpdate=function(b,c,d){};this.ExecuteDelete=function(b,c){};this.ExecuteBatchUpdate=function(b){throw new Error("Not Supported.")};this.OnSelecting=function(b){return ISEvent.Raise(this.Owner.ClientBindingSettings.ServiceEvents.Selecting,this.Owner,b)};this.OnInserting=function(b,c){return ISEvent.Raise(this.Owner.ClientBindingSettings.ServiceEvents.Inserting,this.Owner,b,c)};this.OnUpdating=function(b,c,d){return ISEvent.Raise(this.Owner.ClientBindingSettings.ServiceEvents.Updating,this.Owner,b,c,d)};this.OnDeleting=function(b,c){return ISEvent.Raise(this.Owner.ClientBindingSettings.ServiceEvents.Deleting,this.Owner,b,c)};this.OnBatchUpdating=function(b){return ISEvent.Raise(this.Owner.ClientBindingSettings.ServiceEvents.BatchUpdating,this.Owner,b)};this.CallbackHandler=function(d){var c=this.LastCommand;var b=c[0];var e=this.Owner.ClientBindingSettings.ServiceEvents;if(b=="Select"){return ISEvent.Raise(e.Selected,this.Owner,d)}else{if(b=="Insert"){return ISEvent.Raise(e.Inserted,this.Owner,d)}else{if(b=="Update"){return ISEvent.Raise(e.Updated,this.Owner,d)}else{if(b=="Delete"){return ISEvent.Raise(e.Deleted,this.Owner,d)}else{if(b=="BatchUpdate"){return ISEvent.Raise(e.BatchUpdated,this.Owner,d)}}}}}throw new Error("Unspported action")}}function DataSourceSelectArguments(){this._Type="DataSourceSelectArguments";this.FilterExpression="";this.SortExpression="";this.MaximumRows=-1;this.RetrieveTotalRowCount=false;this.StartRowIndex=-1;this.TotalRowCount=-1;this.Tag="";this.OperationType="";this.ViewName="";this.GroupByExpression="";this.CalculateAggregates=false;this.AggregatesExpression=null}function WebServiceDataSourceProvider(a){this._Type="WebServiceDataSourceProvider";IClientDataSourceProvider.call(this,a);this.ExecuteSelect=function(c){var b=this.Owner;var e=b.ClientBindingSettings;var f=b.XmlHttp;var d=e.ServiceMethods.SelectMethod;if(e.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(d==""){throw new Error("SelectMethod cannot be empty.")}if(!this.OnSelecting(c)){return}if(e.DataSourceType=="WcfService"){c.OperationType=SelectOperation[c.OperationType]}f.SendJson(ISDataEngine.BuildUrl(e.ServiceUrl,d),"ExecuteSelect",{selectArguments:c})};this.ExecuteInsert=function(d){var b=this.Owner;var e=b.ClientBindingSettings;var f=b.XmlHttp;var c=e.ServiceMethods.InsertMethod;if(e.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(c==""){throw new Error("InsertMethod is required for client service's ExecuteInsert.")}if(!this.OnInserting(d,null)){return}f.SendJson(ISDataEngine.BuildUrl(e.ServiceUrl,c),"ExecuteInsert",{newObject:d})};this.ExecuteUpdate=function(c,d){var b=this.Owner;var e=b.ClientBindingSettings;var g=b.XmlHttp;var f=e.ServiceMethods.UpdateMethod;if(e.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(f==""){throw new Error("UpdateMethod is required for client service's ExecuteUpdate.")}if(!this.OnUpdating(c,d,null)){return}g.SendJson(ISDataEngine.BuildUrl(e.ServiceUrl,f),"ExecuteUpdate",{newObject:c,originalObject:d})};this.ExecuteDelete=function(d){var b=this.Owner;var e=b.ClientBindingSettings;var f=b.XmlHttp;var c=e.ServiceMethods.DeleteMethod;if(e.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(c==""){throw new Error("DeleteMethod is required for client service's ExecuteDelete.")}if(!this.OnDeleting(d,null)){return}f.SendJson(ISDataEngine.BuildUrl(e.ServiceUrl,c),"ExecuteDelete",{originalObject:d})};this.ExecuteBatchUpdate=function(b){var c=this.Owner;var d=c.ClientBindingSettings;var f=c.XmlHttp;var e=d.ServiceMethods.BatchUpdateMethod;if(d.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(e==""){throw new Error("BatchUpdateMethod is required for client service's ExecuteBatchUpdate.")}if(!this.OnBatchUpdating(b,null)){return}f.SendJson(ISDataEngine.BuildUrl(d.ServiceUrl,e),"ExecuteBatchUpdate",{changes:b})}}function AstoriaDataSourceProvider(a){this._Type="AstoriaDataSourceProvider";IClientDataSourceProvider.call(this,a);this.IsBatchUpdateProgress=false;this.BatchQueues=null;this.ExecuteSelect=function(c){var b=this.Owner;var d=b.ClientBindingSettings;var e=b.XmlHttp;if(d.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(!b.IsClientOperation()){throw new Error("This version of ADO.NET Data Service does not support paging capability. Please set DataLoadMode to AllData instead.")}if(!this.OnSelecting(c)){return}e.Reset();e.HttpVerb="GET";e.SendJson(ISDataEngine.BuildAstoriaUrl(d.ServiceUrl,c),"ExecuteSelect","")};this.ExecuteInsert=function(d,b){var c=this.Owner;var e=c.ClientBindingSettings;var f=c.XmlHttp;if(e.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(!this.OnInserting(d,b)){return}f.Reset();f.SendJson(ISDataEngine.BuildUrl(e.ServiceUrl,b.ViewName),"ExecuteInsert",d)};this.ExecuteUpdate=function(d,e,b){var c=this.Owner;var f=c.ClientBindingSettings;var g=c.XmlHttp;if(f.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(!this.OnUpdating(d,e,b)){return}g.Reset();g.UsePostTunneling=true;g.HttpVerb="MERGE";g.SendJson(e.__metadata.uri,"ExecuteUpdate",d)};this.ExecuteDelete=function(d,b){var c=this.Owner;var e=c.ClientBindingSettings;var f=c.XmlHttp;if(e.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(!this.OnDeleting(d,b)){return}f.Reset();f.HttpVerb="DELETE";f.SendJson(d.__metadata.uri,"ExecuteDelete")};this.ExecuteBatchUpdate=function(c){var e=this.Owner;var g=e.ClientBindingSettings;var h=e.XmlHttp;var f=null;if(g.ServiceUrl==""){throw new Error("ServiceUrl cannot be empty.")}if(this.BatchQueues==null&&!this.OnBatchUpdating(c,arguments)){return}this.IsBatchUpdateProgress=true;if(c.length>0){f=c[0];c.splice(0,1);this.BatchQueues=c}if(f!=null){var b=f.Arguments;var d=f.Command;if(d=="Insert"){this.ExecuteInsert(b[0],b[1])}else{if(d=="Update"){this.ExecuteUpdate(b[0],b[1],b[2])}else{if(d=="Delete"){this.ExecuteDelete(b[0],b[1])}}}}else{if(f==null){this.IsBatchUpdateProgress=false;e.OnResponse(new Object(),true)}}}}function AstoriaBatchChanges(){this._Type="AstoriaBatchChanges";ISObject.call(this);this.Command="";this.Arguments=null;this.TableName=""}function ClientBindingSettings(){this._Type="ClientBindingSettings";ISObject.call(this);this.DataLoadMode="AllData";this.DataSourceType="ServerDataSource";this.FetchDataOnPageLoad=true;this.ServiceUrl="";this.ItemTypeName="";this.ServiceMethods=new ClientServiceMethods();this.ServiceEvents=new ClientServiceEvents()}function ClientServiceMethods(){this._Type="ClientServiceMethods";ISObject.call(this);this.SelectMethod="";this.InsertMethod="";this.UpdateMethod="";this.DeleteMethod="";this.BatchUpdateMethod=""}function ClientRowChanges(){this._Type="ClientRowChanges";ISObject.call(this);this.OriginalObject=null;this.NewObject=null;this.RowState="Unmodified"}function ClientServiceEvents(){this._Type="ClientServiceEvents";ISObject.call(this);this.Selecting="";this.Selected="";this.Inserting="";this.Inserted="";this.Updating="";this.Updated="";this.BatchUpdating="";this.BatchUpdated=""}function ClientDataFormat(){this._Type="ClientDataFormat";ISObject.call(this);this.Index=0;this.Format="";this.Value=null;this.FormattedValue=null}function ISDataView(a,b,c){this._Type="ISDataView";ISObject.call(this);this.ApplyDefaultSort=true;this.DataViewManager=null;this.RowFilter=null;this.Sort=null;this.Table=a;this.CaseSensitive=false;if(b){this.RowFilter=b}if(c){this.Sort=c}this.Items=new ISArray();this.__getter=function(d){return ISDataViewEngine.__getter(this,d)};this.__setter=function(e,f,d){return ISDataViewEngine.__setter(this,e,f,d)};ISDataViewEngine.CreateDataViewRows(this)}function ISDataRowView(a,b){this._Type="ISDataRowView";ISObject.call(this);this.Index=-1;this.DataView=a;this.Row=b;this.Cells=new ISArray();this.__getter=function(c){return ISDataRowViewEngine.__getter(this,c)};this.__setter=function(d,e,c){return ISDataRowViewEngine.__setter(this,d,e,c)}}function ISDataCellView(b,a){this._Type="ISDataCellView";ISObject.call(this);this.Index=-1;this.Name=a.Column.ColumnName;this.Cell=a;this.RowView=b}var pCellView=ISDataCellView.prototype;pCellView.SetValue=function(b,a){ISDataCellViewEngine.SetValue(this,b,a)};pCellView.GetValue=function(){return ISDataCellViewEngine.GetValue(this)};var pDataView=ISDataView.prototype;pDataView.GetCount=function(){return ISDataViewEngine.GetCount(this)};pDataView.GetItem=function(a){return ISDataViewEngine.GetItem(this,a)};pDataView.CopyTo=function(a,b){return ISDataViewEngine.CopyTo(this,a,b)};pDataView.Find=function(b,a){return ISDataViewEngine.Find(this,b,a)};pDataView.FindRows=function(a){return ISDataViewEngine.FindRows(this,a)};pDataView.Refresh=function(){ISDataViewEngine.CreateDataViewRows(this)};var ISDataViewEngine={__getter:function(a,b){return a[b]},__setter:function(b,c,d,a){switch(c){case"RowFilter":ISDataViewEngine.SetRowFilter(b,d);break;case"Sort":ISDataViewEngine.SetSort(b,d);break;default:break}},SetRowFilter:function(a,b){a.RowFilter=b;ISDataViewEngine.CreateDataViewRows(a)},SetSort:function(a,b){a.Sort=b;ISDataViewEngine.CreateDataViewRows(a)},GetCount:function(a){return a.Items.length},GetItem:function(a,b){if(typeof(b)=="string"){return a.Items.GetNamedItem(b)}else{return a.Items[b]}},CopyTo:function(b,a,d){if(a!=null){var e=b.Items;if(d==null){d=0}for(var c=d;c<e.length;c++){a[a.length]=e[c]}}},Find:function(a,c,b){},FindRows:function(a,b){return a.Find(b,true)},CreateDataViewRows:function(a){if(a.Table==null){return}var c=null;var b=null;a.Items.Clear();ISDataEngine.QueryRows(a)},CreateDataViewRow:function(b,c){var a=new ISDataRowView(b,c);ISDataRowViewEngine.SetCells(a,c.Cells);b.Items.Add(a)}};var ISDataEngine={QueryRows:function(c){var o=c.Table;var h=c.RowFilter;var j=c.Sort;for(var e=0;e<o.Rows.length;e++){ISDataViewEngine.CreateDataViewRow(c,o.Rows[e])}if(j!=""&&j!=null){var a=j.split(",");var l=[];for(var e=0;e<a.length;e++){var n=a[e];var b=n.split(" ");var m=b[0];var k=1;if(b.length>0){if(b[1].toLowerCase()=="desc"){k=-1}}l.push([m,k])}c.SortInfo=l;c.Items.sort(ISDataEngine.Sort)}if(h!=""&&h!=null){var g=c.Items.length;c.FilterInfo=ISDataEngine.GetJavascriptFilterExpression(h);for(var e=0;e<g;e++){var f=c.Items[e];var d=ISDataEngine.EvaluateExpression(f,c.FilterInfo);if(d==false){c.Items.splice(e,1);e--;g--}if(d==null){return}}}},Sort:function(f,g){var j=0;var l=f.DataView;var h=l.SortInfo;for(var e=0;e<h.length;e++){var c=f.Cells.GetNamedItem(h[e][0]).Cell.Value;var d=g.Cells.GetNamedItem(h[e][0]).Cell.Value;var k=h[e][1];if(!l.CaseSensitive){if(typeof(c)=="string"){c=c.toLowerCase()}if(typeof(d)=="string"){d=d.toLowerCase()}}if(isNaN(c-d)){if((isNaN(c))&&(isNaN(d))){j=(d<c)-(c<d)}else{j=(isNaN(c)?1:-1)}}else{j=(c-d)}if(e+1>=h.length||j!=0){return j*k}}},EvaluateExpression:function(viewItem,filterInfo){var expression=filterInfo.Expression;var result=null;var dataView=viewItem.DataView;for(var i=0;i<filterInfo.Members.length;i++){var member=filterInfo.Members[i];var cell=viewItem.Cells.GetNamedItem(member);var column=cell.Cell.Column;var value=cell.Cell.Value;var quote="";switch(column.DataType){case"System.String":quote="'";if(value==null){value=""}if(!dataView.CaseSensitive){value=value.toLowerCase()}value=value.replace(new RegExp("'","g"),"\\'");break;case"System.DateTime":if(value!=null){value="new Date('"+value.toString()+"').getTime()"}else{value="null"}break;case"System.Boolean":break;default:break}value=quote+value+quote;expression=expression.replace(new RegExp(member,"g"),value).replace(/[\[\]]/g,"")}try{result=eval(expression)}catch(e){alert("Invalid filter expression.");result=null}return result},GetJavascriptFilterExpression:function(i){var g=/\band\b|\bor\b/g;var a=null;var f=-1;var e="";var h="";var l="";var k="";var d=false;var c=new Object();var b=new Array();var j="";while((a=g.exec(i))!=null){d=true;e=RegExp.leftContext;h=RegExp.rightContext;k=RegExp.lastMatch;if(f>-1){e=e.substr(f,RegExp.index)}j=ISDataEngine.TranslateExpressionToken(e,b);l+=j+(k=="and"?"&&":"||");f=a.lastIndex}if(d){l+=ISDataEngine.TranslateExpressionToken(h,b)}else{l=ISDataEngine.TranslateExpressionToken(i,b)}c.Expression=l;c.Members=b;return c},TranslateExpressionToken:function(o,b){var k=o.replace(/[!()]/g,"");var f=false;var g=false;var c="";if(k.substring(0,1)==" "){g=true;k=k.substring(1)}if(k.substring(k.length-1)==" "){f=true;k=k.substring(0,k.length-1)}if((c=o.match(/\[\w*(.|\s+)\w+]/))!=null){b.push(c[0].replace(/[\[\]]/g,""))}if(o.indexOf("#")>-1){var e=/\#([0-9/a-zA-Z\s:]{0,20})\#/g;var d=null;while((d=e.exec(o))!=null){var j=RegExp.lastMatch;var l=j.replace(/\#/g,"");o=o.replace(new RegExp(j,"g"),"(new Date('"+l+"')).getTime()")}}if(!o.match(/[\<\>]/)){o=o.replace(/(?=[^\>\<])\=(?=.*)/g,"==")}o=o.replace(/\<\>/g,"!=");if(o.indexOf("like")>-1){var i=o.substring(o.indexOf("like")+4).match(/\'.*\'/g);var n=ISDataEngine.TrimLeftRight(o.replace(/[!()]/g,""));var m="";var h=0;i=i[0];if(i!=""){i=i.substring(1,i.length-1);i=i.replace(/[%]/g,"").replace(/[']/g,"\\'");var a=i.match(/[\\]/g);if(a!=null){h=a.length}}m=n.replace(/\s+like\s+.+/g,".substring(0, "+(i.length-h)+") == '"+i+"'");o=o.replace(n,m)}if(o.indexOf("contains")>-1){var i=o.substring(o.indexOf("contains")+4).match(/\'.*\'/g);var n=ISDataEngine.TrimLeftRight(o.replace(/[!()]/g,""));var m="";i=i[0].replace(/['%]/g,"");m=n.replace(/\s+contains\s+.+/g,".indexOf('"+i+"') > -1");o=o.replace(n,m)}o=(g?" ":"")+o+(f?" ":"");return o},TrimLeftRight:function(a){return a.replace(/^[ \t]+|[ \t]+$/ig,"")},BuildUrl:function(b,a){return b+"/"+a},BuildAstoriaUrl:function(c,a){var b=c+"/"+a.ViewName;if(a.SortExpression!=""){b+="?sort$="+a.SortExpression}return b},MergeDataTable:function(e,a){var b=a.GetDefaultView();for(var c=0;c<e.Rows.length;c++){var d=e.Rows[c];a.Rows.Add(d);ISDataViewEngine.CreateDataViewRow(b,d)}},GetDataSet:function(d,f){var e;var c=null;if(typeof(d.GetType)=="function"){e=d.GetType()}if(e=="ISDataSet"||e=="ISDataTable"){if(e=="ISDataSet"){c=d}else{var b=new ISDataSet();b.DataSetName="DataSet1";b.Tables.Add(d);d.DataSet=b;c=b}}else{var a=true;if(typeof(d.Type)=="string"){e=d.Type;if(typeof(ISADONETMappingEngine)!="undefined"&&(e=="ISDataSet"||e=="ISDataTable")){a=false;c=ISADONETMappingEngine.MappingJsonToObject(d);if(e=="ISDataTable"){var b=new ISDataSet();c.DataSet=b;b.Tables.Add(c);c=b}}}if(a){c=ISDataEngine.GetConvertedDataSource(d,f)}}return c},GetConvertedDataSource:function(e,k){if(e==null||e.length==0){return e}var j=e[0];var d=new ISDataSet();var f=new ISDataTable();if(typeof(k)=="undefined"||k==null){k="Table1"}d.DataSetName="DataSet1";f.TableName=f.Name=k;f.DataSet=d;for(prop in j){var b=new ISDataColumn(f);var g=j[prop];b.Name=b.ColumnName=prop;if(typeof(g)=="string"||g==null||typeof(g)=="undefined"){b.DataType="System.String"}else{if(typeof(g)=="number"){b.DataType="System.Int32"}else{if(typeof(g)=="bool"){b.DataType="System.Boolean"}else{if(g instanceof Date){b.DataType="System.DateTime"}else{if(typeof(g)=="object"){b.DataType="System.Object"}}}}}f.Columns.Add(b)}for(var h=0;h<e.length;h++){var c=new ISDataRow();var j=e[h];c.Table=f;c.ObjectContext=j;for(prop in j){var b=f.Columns.GetNamedItem(prop);var a=new ISDataCell(b);a.Value=j[prop];a.Row=c;c.Cells.push(a)}f.Rows.Add(c)}d.Tables.Add(f);return d},CloneObject:function(b){if(!b){return null}var a=new Object();for(var c in b){a[c]=b[c]}return a},BuildObject:function(typeName,isAstoria){var itemType=eval(typeName);var newObject=new itemType();if(!isAstoria&&!newObject.__type){newObject.__type=typeName}return newObject},AttachObject:function(b,c){for(var d in c){var a=b.Cells.GetNamedItem(d);if(a!=null){a.Value=c[d]}}b.ObjectContext=c;return b},FormatCompositeString:function(g,h,d,q){var n=h.indexOf("{");var o;var e=new Array();while(n>-1){o=h.indexOf("}",n+1);if(o==-1){throw new Error("Invalid formatting")}var k=h.substring(n,o);var p=-1;var l;var m="";k=k.replace("{","");var p=k.indexOf(":");if(p==-1){l=parseFloat(k)}else{l=parseFloat(k.substring(0,p));m=k.substring(p+1)}var f=new ClientDataFormat();f.Index=l;f.Format=m;f.Value=d[l];e.push(f);n=h.indexOf("{",o+1)}for(var j=0;j<e.length;j++){var a=e[j];var c="";var b="";c="{"+a.Index;if(a.Format!=""){c+=":"+a.Format}c+="}";b=ISDataEngine.FormatString(g,a.Format,a.Value,q);a.FormattedValue=b;h=h.replace(c,b)}return h},FormatString:function(a,d,g,f){if(g==null||g==undefined){return g}var e=typeof(g);if(g instanceof Date){e="datetime"}if(e=="string"){return g}if(e=="number"){g=g.toString()}else{g=(g.getMonth()+1)+"/"+g.getDate()+"/"+g.getFullYear()+" "+g.getHours()+":"+g.getMinutes()+":"+g.getSeconds()}if(e=="number"){var c=a.NumberFormatInfo.Currency.Positive.DecimalSeparator;if(c!="."){g=g.replace(".",c)}}if(!f){f=IS.GetValidationEngine()}var b=new ISClientData(null,e,d);f.CheckType(b);b.NewValue=g;if(e=="datetime"&&d==""){b.Format="G"}if(e=="number"&&d==""){b.Format="g"}return f.Mask(b,a)}};var ISDataRowViewEngine={__getter:function(a,b){var c;switch(b){case"IsEdit":case"IsNew":c=a["_"+b];break;default:c=a[b];break}return c},__setter:function(b,c,d,a){switch(c){case"IsEdit":case"IsNew":break;default:b[c]=d;break}},CreateNewDataRowView:function(b){var a=new ISDataRowView(b);ISDataRowViewEngine.InitNewDataRowView(a);return a},InitNewDataRowView:function(a){var b=a.DataView;if(b!=null){var c=b.Table;if(c!=null){a.Row=c.NewRow();ISDataRowViewEngine.SetCells(a)}}},SetCells:function(b,a){var d;b.Cells.Clear();for(var c=0;c<a.length;c++){b.Cells.Add(new ISDataCellView(b,a[c]))}}};var ISDataCellViewEngine={GetValue:function(a){return a.Cell.GetValue()},SetValue:function(a,d,c){var b=a.RowView;if(b.DataView.AllowEdit){b._IsEdit=b.IsEdit=b._IsNew==false;a.Cell.SetValue(d)}else{throw new Error("Cannot edit on a DataSource where AllowEdit is false.")}}};